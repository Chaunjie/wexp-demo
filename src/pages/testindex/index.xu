<style lang="less">
  @import "../../less/index.less";

  .container{
    background-color: orange !important;
    .test{
      background-color: green;
    }
  }
  .test {
    color: orange;
  }
</style>
<style>
  @import "../../wxss/add.wxss";
</style>
<style lang="less" src="../../less/index.less"></style>
<template>
  <view bindtap="tapPro" class="padding test-wxss">666669999</view>
  <k-test text="{{name}}" bind:select="select" custom-class="test"></k-test>
</template>
<script>
  import wexp from '../../wexp/index'
  import regeneratorRuntime from '../../lib/runtime'

  export default class Index extends wexp.page{
    config = {
      navigationBarTitleText: '主页',
      "backgroundColor": "#ccc",
      "usingComponents": {
        "k-panel": "../../dist/panel/index",
        "k-cell-group": "../../dist/cell-group/index",
        "k-cell": "../../dist/cell/index",
        "k-test": "../../components/test/index"
      }
    }

    data = {
      cellArr: [
        {
          title: '布局',
          list: [
            {
              title: 'Layout 布局',
              link: 'layout'
            },
            {
              title: 'Grid 宫格',
              link: 'grid'
            },
            {
              title: 'Cell 列表',
              link: 'cell'
            },
            {
              title: 'Panel 面板',
              link: 'panel'
            },
            {
              title: 'Folder 折叠面板',
              link: 'folder'
            }
          ]
        },
        {
          title: '基础组件',
          list: [
            {
              title: 'Button 按钮',
              link: 'button'
            },
            {
              title: 'Icon 图标',
              link: 'icon'
            },
            {
              title: 'LoadMore 更多',
              link: 'loadmore'
            },
            {
              title: 'Loading 加载中',
              link: 'loading'
            },
            {
              title: 'Tag 标记',
              link: 'tag'
            },
            {
              title: 'Helper 基础样式',
              link: 'helper'
            }
          ]
        },
        {
          title: '导航组件',
          list: [
            {
              title: 'Popup 弹出层',
              link: 'popup'
            },
            {
              title: 'NoticeBar 通知栏',
              link: 'noticebar'
            },
            {
              title: 'Tab 标签',
              link: 'tab'
            },
            {
              title: 'Step 步骤条',
              link: 'step'
            }
          ]
        },
        {
          title: '操作提示组件',
          list: [
            {
              title: 'ActionSheet 操作盘',
              link: 'actionsheet'
            },
            {
              title: 'Toptips 顶部提示',
              link: 'toptips'
            },
            {
              title: 'Dialog 弹出框',
              link: 'dialog'
            },
            {
              title: 'Toast 轻提示',
              link: 'toast'
            },
            {
              title: 'Swipeout 滑动菜单',
              link: 'swipeout'
            }
          ]
        },
        {
          title: '表单组件',
          list: [
            {
              title: 'Uploader 上传',
              link: 'uploader'
            },
            {
              title: 'Select 选择',
              link: 'select'
            },
            {
              title: 'Checkbox 复选框',
              link: 'checkbox'
            },
            {
              title: 'Radio 单选框',
              link: 'radio'
            },
            {
              title: 'NumberPicker 数字输入框',
              link: 'numberpicker'
            },
            {
              title: 'Switch 开关',
              link: 'switch'
            },
            {
              title: 'Input 输入框',
              link: 'input'
            },
            {
              title: 'Slider 滑块',
              link: 'slider'
            },
            {
              title: 'Rate 星级评分',
              link: 'rate'
            }
          ]
        },
        {
          title: '搜索组件',
          list: [
            {
              title: 'Searchbar 搜索框',
              link: 'searchbar'
            }
          ]
        }
      ],
      name: 'chaunjie'
    }

    methods = {
      select (e) {
        console.log(e.detail)
      },
      test () {
        console.log(99999)
      },
      tap (e) {
        console.log(e)
      },
      onLoad () {
       this.setData({
          cellArr: [],
          name: 'xudao学习学习'
        })
        setTimeout(() => {
          // console.log(this.$parent.globalData)
          // this.$parent.globalData.name = 'xudao11111'
          // this.testAsync()
          // console.log(this.data)
          this.$query('.padding').then((res) => {
            console.log(res)
          })
        }, 3000)
      }
    }

    sleep (s) {
      return new Promise((resolve, reject) => {
        setTimeout(() => {
          resolve('promise 76666')
        }, s * 1000)
      })
    }

    async testAsync () {
      const data = await this.sleep(3)
      console.log(data)
    }

    async tapPro (e) {
      this.test()
      this.$parent.globalData.name = 'xudao'
      const res = await this.$query('.padding')
      console.log(res)
      this.setData({name: 'xudao'})
      // this.$route('navigate', '../test/index', {name: 'chaunjie'})
    }
  }
</script>